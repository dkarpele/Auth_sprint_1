version: '3'

services:
  postgres:
    image: postgres:latest
    privileged: true
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-db:/data/postgres
    networks:
      - backend

  fastapi:
    build: ./src/
    env_file:
      - .env
    networks:
      - backend
    expose:
      - "8000"
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:latest
    restart: on-failure
    privileged: true
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/site.conf:/etc/nginx/conf.d/site.conf:ro
    depends_on:
      - fastapi
    ports:
      - "80:80"
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    privileged: true
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 50

volumes:
  postgres-db:

networks:
  backend: